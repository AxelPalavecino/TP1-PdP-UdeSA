/**
 * @file main.cpp
 * @brief Programa principal del juego de combate Piedra-Papel-Tijera
 * 
 * Este archivo contiene el punto de entrada del programa y la l√≥gica para
 * mostrar men√∫s, configurar el juego y gestionar la interacci√≥n del usuario
 * con el sistema de combate.
 */

#include <iostream>
#include <cstdlib>
#include <ctime>
#include <limits>
#include "CombatePPT.hpp"

using namespace std;
bool usarDa√±oFijo = true;

/**
 * @brief Limpia la pantalla del terminal
 * 
 * Utiliza comandos espec√≠ficos del sistema para limpiar la pantalla
 * del terminal, mejorando la experiencia del usuario.
 */
void limpiarPantalla() {
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

/**
 * @brief Muestra un mensaje decorado con un borde
 * 
 * @param mensaje Texto a mostrar dentro del borde
 */
void bordeDecorado(const string& mensaje) {
    int ancho = mensaje.length() + 4;
    
    cout << "‚ïî";
    for (int i = 0; i < ancho; i++) cout << "‚ïê";
    cout << "‚ïó" << endl;
    
    cout << "‚ïë  " << mensaje << "  ‚ïë" << endl;
    
    cout << "‚ïö";
    for (int i = 0; i < ancho; i++) cout << "‚ïê";
    cout << "‚ïù" << endl;
}

/**
 * @brief Muestra el t√≠tulo del juego y las reglas
 */
void mostrarTitulo() {
    mostrarAsciiArt();
    
    cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë             \033[1;33m‚öîÔ∏è  BATALLA DE LEYENDAS  üõ°Ô∏è\033[0m             ‚ïë" << endl;
    cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << endl;
    cout << "‚ïë \033[1;32m‚û§\033[0m Golpe Fuerte \033[1;31m‚öîÔ∏è\033[0m vence a Golpe R√°pido \033[1;36müå™Ô∏è\033[0m       ‚ïë" << endl;
    cout << "‚ïë \033[1;32m‚û§\033[0m Golpe R√°pido \033[1;36müå™Ô∏è\033[0m vence a Defensa y Golpe \033[1;34müõ°Ô∏è\033[0m   ‚ïë" << endl;
    cout << "‚ïë \033[1;32m‚û§\033[0m Defensa y Golpe \033[1;34müõ°Ô∏è\033[0m vence a Golpe Fuerte \033[1;31m‚öîÔ∏è\033[0m   ‚ïë" << endl;
    
    if (usarDa√±oFijo) {
        cout << "‚ïë \033[1;32m‚û§\033[0m El perdedor recibe siempre \033[1;31m10\033[0m puntos de da√±o    ‚ïë" << endl;
    } else {
        cout << "‚ïë \033[1;32m‚û§\033[0m El perdedor recibe \033[1;31m10\033[0m puntos de da√±o + bonus    ‚ïë" << endl;
        cout << "‚ïë   seg√∫n el arma utilizada                             ‚ïë" << endl;
    }
    
    cout << "‚ïë \033[1;32m‚û§\033[0m Pierde el primero que se queda sin HP (\033[1;32m100\033[0m inicial) ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

/**
 * @brief Configura el sistema de da√±o del combate
 * 
 * Permite al usuario elegir entre usar un sistema de da√±o fijo
 * de 10 puntos por ataque, o incluir bonificaciones seg√∫n el arma.
 */
void configurarCombate() {
    limpiarPantalla();
    bordeDecorado("CONFIGURACI√ìN DEL SISTEMA DE COMBATE");
    cout << endl;
    
    cout << "Sistema de da√±o actual: " << 
        (usarDa√±oFijo ? "\033[1;34mDa√±o FIJO\033[0m (siempre 10 puntos)" : 
                       "\033[1;33mDa√±o CON BONIFICACIONES\033[0m de arma") << endl << endl;
    
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë  Opciones disponibles:                            ‚ïë" << endl;
    cout << "‚ïë  \033[1;36m1.\033[0m Usar da√±o fijo (siempre 10 puntos)          ‚ïë" << endl;
    cout << "‚ïë  \033[1;36m2.\033[0m Usar da√±o base + bonificaciones seg√∫n arma  ‚ïë" << endl;
    cout << "‚ïë  \033[1;36m0.\033[0m Volver sin cambios                          ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
    
    int opcion;
    cout << "\n\033[1;32m‚û§\033[0m Seleccione una opci√≥n: ";
    cin >> opcion;
    
    if (cin.fail()) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "\033[1;31m‚úó Entrada inv√°lida. No se han realizado cambios.\033[0m" << endl;
    } else {
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        
        switch (opcion) {
            case 1:
                usarDa√±oFijo = true;
                cout << "\033[1;32m‚úì Configuraci√≥n establecida: DA√ëO FIJO (10 puntos)\033[0m" << endl;
                break;
            case 2:
                usarDa√±oFijo = false;
                cout << "\033[1;32m‚úì Configuraci√≥n establecida: DA√ëO CON BONIFICACIONES de arma\033[0m" << endl;
                break;
            case 0:
                cout << "\033[1;33m‚ö† Configuraci√≥n sin cambios.\033[0m" << endl;
                break;
            default:
                cout << "\033[1;31m‚úó Opci√≥n inv√°lida. No se han realizado cambios.\033[0m" << endl;
                break;
        }
    }
    
    cout << "\n\033[1;36m‚û§\033[0m Presione Enter para continuar...";
    cin.get();
}

/**
 * @brief Muestra el men√∫ principal y obtiene la selecci√≥n del usuario
 * @return Entero que representa la opci√≥n elegida por el usuario
 */
int mostrarMenuPrincipal() {
    limpiarPantalla();
    mostrarTitulo();
    
    cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë        \033[1;33mMEN√ö PRINCIPAL\033[0m        ‚ïë" << endl;
    cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << endl;
    cout << "‚ïë  \033[1;36m1.\033[0m Iniciar Nuevo Combate     ‚ïë" << endl;
    cout << "‚ïë  \033[1;36m2.\033[0m Configurar Sistema de Da√±o‚ïë" << endl;
    cout << "‚ïë  \033[1;36m0.\033[0m Salir                     ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
    
    int opcion;
    while (true) {
        cout << "\n\033[1;32m‚û§\033[0m Seleccione una opci√≥n (0-2): ";
        cin >> opcion;
        
        if (cin.fail()) {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << "\033[1;31m‚úó Entrada inv√°lida. Intente de nuevo.\033[0m" << endl;
        } else if (opcion >= 0 && opcion <= 2) {
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            return opcion;
        } else {
            cout << "\033[1;31m‚úó Opci√≥n fuera de rango. Intente de nuevo.\033[0m" << endl;
        }
    }
}

/**
 * @brief Muestra los cr√©ditos finales del juego
 */
void mostrarCreditos() {
    limpiarPantalla();
    mostrarAsciiArt();
    
    cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë              \033[1;33mGRACIAS POR JUGAR\033[0m                   ‚ïë" << endl;
    cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << endl;
    cout << "‚ïë         Desarrollado por Axel David Palavecino         ‚ïë" << endl;
    cout << "‚ïë                                                        ‚ïë" << endl;
    cout << "‚ïë          ¬°Esperamos que lo hayas disfrutado!           ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

/**
 * @brief Funci√≥n principal del programa
 * 
 * Muestra el men√∫ principal y gestiona las diferentes opciones,
 * incluyendo iniciar combate, configurar el sistema y salir del juego.
 * 
 * @return 0 si el programa finaliza correctamente
 */
int main() {
    srand(static_cast<unsigned int>(time(nullptr)));
    
    while (true) {
        int opcion = mostrarMenuPrincipal();
        
        if (opcion == 0) {
            mostrarCreditos();
            cout << "\n\033[1;36m‚û§\033[0m Presione Enter para finalizar...";
            cin.get();
            break;
        } else if (opcion == 2) {
            configurarCombate();
            continue;
        }
        
        limpiarPantalla();
        CombatePPT combate(true, usarDa√±oFijo);
        
        if (!combate.inicializar()) {
            cout << "\033[1;31m‚úó Error al inicializar el combate. Volviendo al men√∫ principal...\033[0m" << endl;
            cout << "\n\033[1;36m‚û§\033[0m Presione Enter para continuar...";
            cin.get();
            continue;
        }
        
        while (!combate.haTerminado()) {
            limpiarPantalla();
            if (!combate.ejecutarTurno()) {
                break;
            }
        }
        limpiarPantalla();
        combate.mostrarResultado();
        
        cout << "\n\033[1;36m‚û§\033[0m Presione Enter para volver al men√∫ principal...";
        cin.get();
    }
    
    return 0;
}

/**
 * @brief Muestra em ASCII Art decorativo el titulo de la Universidad de San Andres
 */
void mostrarAsciiArt() {
    cout << "\n\033[1;36m";
    cout << " _   _     _      ___     _   " << endl;
    cout << "| | | | __| | ___/ __|   / \\  " << endl;
    cout << "| | | |/ _` |/ _ \\__ \\  / _ \\ " << endl;
    cout << "| |_| | (_| |  __/___) / ___ \\" << endl;
    cout << " \\___/ \\__,_|\\___|____/_/   \\_\\" << endl;
    cout << "\033[0m\n";
}
